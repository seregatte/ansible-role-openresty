server {
  #listen [{{ nginx_ipv6 }}]:{{ nginx_port }} ssl http2 ipv6only=on;
  #server_name  {{ server_hostname }};
  #listen {{ nginx_port }} default_server ssl http2 default_server;
  listen [::]:{{ nginx_port }} ssl http2 default_server;

  root {{ resty_default_web_dir }}/;

  client_max_body_size 64M;

  # NGINX self signed SSL Certificate
  ssl_certificate {{ resty_SSL_cert_dir }}/nginx-selfsigned.crt;
  ssl_certificate_key {{ resty_SSL_key_dir }}/nginx-selfsigned.key;
  ssl_dhparam {{ resty_SSL_cert_dir }}/dhparam.pem;

  set $skip_cache 0;

  # POST requests and urls with a query string should always go to PHP
  if ($request_method = POST) {
      set $skip_cache 1;
  }
  if ($query_string != "") {
      set $skip_cache 1;
  }

  # Don't cache uris containing the following segments
  if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
      set $skip_cache 1;
  }

  # Don't use the cache for logged in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
      set $skip_cache 1;
  }


  # Deny access to any files with a .php extension in the uploads directory
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

  location / {
    index index.php index.html index.htm;
    try_files $uri $uri/ /index.php?$args;
  }

  location ~* \.(gif|jpg|jpeg|png|css|js)$ {
    expires max;
  }

  location /redis-fetch {
      internal  ;
      set  $redis_key $args;
      redis_pass  127.0.0.1:6379;
  }

  location /redis-store {
      internal  ;
      set_unescape_uri $key $arg_key ;
      redis2_query  set $key $echo_request_body;
      redis2_query expire $key 14400;
      redis2_pass  127.0.0.1:6379;
  }


  location ~ \.php$ {

    set $key "nginx-cache:$scheme$request_method$host$request_uri";
    try_files $uri =404;

    srcache_fetch_skip $skip_cache;
    srcache_store_skip $skip_cache;

    srcache_response_cache_control off;

    set_escape_uri $escaped_key $key;

    srcache_fetch GET /redis-fetch $key;
    srcache_store PUT /redis-store key=$escaped_key;

    more_set_headers 'X-Cache $srcache_fetch_status';
    more_set_headers 'X-Cache-2 $srcache_store_status';

    # try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_index index.php;
    fastcgi_pass  unix:{{ php_sock }};
    fastcgi_param   SCRIPT_FILENAME
                    $document_root$fastcgi_script_name;
    include       fastcgi_params;
  }

  # Necessary???
  location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
      access_log off; log_not_found off; expires max;
  }

  # Necessary???
  location = /robots.txt { access_log off; log_not_found off; }
  location ~ /\. { deny  all; access_log off; log_not_found off; }

  # Password protect install and login pages
  # Source: https://www.digitalocean.com/community/questions/nginx-password-protecting-wp-login-php-issues
  # Source [TODO]: https://serverfault.com/questions/564127/nginx-location-regex-for-multiple-paths-with-backend
  location ^~ /wp-admin/install.php  {
    auth_basic "Restricted Access";
    auth_basic_user_file {{ resty_sites_dir }}/.htpasswd;
    fastcgi_pass unix:{{ php_sock }};
    fastcgi_param   SCRIPT_FILENAME
                    $document_root$fastcgi_script_name;
    include       fastcgi_params;

  }
}
